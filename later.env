  <ul>
        <li>
          <img class="productImg" src="./product img/Nike 3.png" alt="">
          <h2>Nike Air Max Premium</h2>
          <p class="productPrice">₱2,459</p>
          <div class="checkoutContainer">
            <p>Check Out</p>
          </div>
          <div class="addtoCartContainer">
            <img class="addtocartImg" src="./dashboard img/shopping-bag.png" alt="" srcset="">
          </div>
        </li>
      </ul>
      <ul>
        <li>
          <img class="productImg" src="./product img/Nike 4.png" alt="">
          <h2>Nike Air Max Premium</h2>
          <p class="productPrice">₱1,799</p>
          <div class="checkoutContainer">
            <p>Check Out</p>
          </div>
          <div class="addtoCartContainer">
            <img class="addtocartImg" src="./dashboard img/shopping-bag.png" alt="" srcset="">
          </div>
        </li>
      </ul>
      <ul>
        <li>
          <img class="productImgQualityChange" src="./product img/Nike 5.png" alt="">
          <h2>Nike Foam Runner</h2>
          <p class="productPrice">₱3,499</p>
          <div class="checkoutContainer">
            <p>Check Out</p>
          </div>
          <div class="addtoCartContainer">
            <img class="addtocartImg" src="./dashboard img/shopping-bag.png" alt="" srcset="">
          </div>
        </li>
      </ul>
      <ul>
        <li>
          <img class="productImgQualityChange" src="./product img/Nike 6.png" alt="">
          <h2>Nike Air Zoom</h2>
          <p class="productPrice">₱5,499</p>
          <div class="checkoutContainer">
            <p>Check Out</p>
          </div>
          <div class="addtoCartContainer">
            <img class="addtocartImg" src="./dashboard img/shopping-bag.png" alt="" srcset="">
          </div>
        </li>
      </ul>
      <ul>
        <li>
          <img class="productImgQualityChange"  src="./product img/Nike 7.png" alt="">
          <h2>3D New Shoes</h2>
          <p class="productPrice">₱1,299</p>
          <div class="checkoutContainer">
            <p>Check Out</p>
          </div>
          <div class="addtoCartContainer">
            <img class="addtocartImg" src="./dashboard img/shopping-bag.png" alt="" srcset="">
          </div>
        </li>
        <ul>
        <li>
          <img class="productImgQualityChange"  src="./product img/Nike 8.png" alt="">
          <h2>3D Speed New</h2>
          <p class="productPrice">₱2,199</p>
          <div class="checkoutContainer">
            <p>Check Out</p>
          </div>
          <div class="addtoCartContainer">
            <img class="addtocartImg" src="./dashboard img/shopping-bag.png" alt="" srcset="">
          </div>
        </li>
      </ul>
      <ul>
        <li>
          <img class="productImgQualityChange"  src="./product img/Jeans 2.png" alt="">
          <h2>Jeans Best</h2>
          <p class="productPrice">₱499</p>
          <div class="checkoutContainer">
            <p>Check Out</p>
          </div>
          <div class="addtoCartContainer">
            <img class="addtocartImg" src="./dashboard img/shopping-bag.png" alt="" srcset="">
          </div>
        </li>
      </ul>


      JAVASCRIPT 


      // JavaScript code
const descriptionTab = document.querySelector('.description');
const reviewsTab = document.querySelector('.reviews');
const descriptionContainer = document.querySelector('.descriptionContainer');
const userReviewsContainer = document.querySelector('.userReviewsContainer');
let selectedProduct = {}; // Variable to store the selected product information

// Function to update the selected product information
function updateSelectedProduct(name, price, size) {
    selectedProduct.name = name;
    selectedProduct.price = price;
    selectedProduct.size = size;
}

descriptionTab.addEventListener('click', () => {
    descriptionContainer.classList.add('show');
    userReviewsContainer.classList.remove('show');

    descriptionTab.classList.add('active');
    reviewsTab.classList.remove('active');
});

reviewsTab.addEventListener('click', () => {
    descriptionContainer.classList.remove('show');
    userReviewsContainer.classList.add('show');

    reviewsTab.classList.add('active');
    descriptionTab.classList.remove('active');
});

// Event listener for clicking on a product container
const productContainers = document.querySelectorAll('.selectproductContainer li');
productContainers.forEach((container) => {
    container.addEventListener('click', (event) => {
        event.preventDefault(); // Prevent the default form submission behavior

        const productName = container.querySelector('h2').textContent;
        const productPrice = container.querySelector('.productPrice').textContent;
        const productSize = container.querySelector('input[name="size"]').value;

        // Update the selected product information
        updateSelectedProduct(productName, productPrice, productSize);

        // Perform any additional actions based on the selected product
        console.log(selectedProduct); // Example: Output the selected product information

        // Update the input values
        const form = document.querySelector('.cartContainerForm');

        // Remove any previously added hidden inputs
        const existingHiddenInputs = form.querySelectorAll('input[type="hidden"]');
        existingHiddenInputs.forEach((input) => {
            input.remove();
        });

        // Create new hidden inputs with the updated values
        const productNameInput = document.createElement('input');
        productNameInput.type = 'hidden';
        productNameInput.name = 'product_name';
        productNameInput.value = selectedProduct.name;

        const priceInput = document.createElement('input');
        priceInput.type = 'hidden';
        priceInput.name = 'price';
        priceInput.value = selectedProduct.price;

        const sizeInput = document.createElement('input');
        sizeInput.type = 'hidden';
        sizeInput.name = 'size';
        sizeInput.value = selectedProduct.size;

        // Add the new hidden inputs to the form
        form.appendChild(productNameInput);
        form.appendChild(priceInput);
        form.appendChild(sizeInput);

        // Send the form data asynchronously using AJAX
        const xhr = new XMLHttpRequest();
        xhr.open(form.method, form.action);
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xhr.onload = function () {
            // Handle the AJAX response if needed
            console.log(xhr.responseText);
        };
        xhr.send(new FormData(form));
    });
});


THE FIRST STABLE JS OF MY dashboard

  // JavaScript to handle the dropdown functionality
  var userContainer = document.querySelector('.userContainer');
  userContainer.addEventListener('click', function() {
      userContainer.classList.toggle('show');
  });

  // Close the dropdown menu if the user clicks outside of it
  document.addEventListener('click', function(event) {
      if (!userContainer.contains(event.target)) {
          userContainer.classList.remove('show');
      }
  });

//   ========= check box ================// 

  var checkboxes = document.querySelectorAll(".selectSidebar input[type='checkbox']");

  checkboxes.forEach(function(checkbox) {
    checkbox.addEventListener("change", function() {
      var listItem = this.parentNode;
      listItem.classList.toggle("checked");
    });
  });

// LIMIT THE CHECKBOX //

  var uls = document.querySelectorAll(".sideBar ul");

  uls.forEach(function(ul) {
    var checkboxes = ul.querySelectorAll(".selectSidebar input[type='checkbox']");

    checkboxes.forEach(function(checkbox) {
      checkbox.addEventListener("change", function() {
        checkboxes.forEach(function(otherCheckbox) {
          if (otherCheckbox !== checkbox) {
            otherCheckbox.checked = false;
          }
        });
      });
    });
  });

  // STYLE CHANGE FOR productlist //

  function changeStyle(element) {
    var productItems = document.getElementsByClassName("productList");
    
    // Remove the 'active' class from all items
    for (var i = 0; i < productItems.length; i++) {
      productItems[i].classList.remove("active");
    }
    
    // Add the 'active' class to the clicked item
    element.parentNode.classList.add("active");
  }
  

  // CHANGE STYLE FOR CONTAINER in selectproductContainer //

  function changeStyle(element, product) {
    var productItems = document.getElementsByClassName("productList");
    var selectProductContainer = document.getElementById("selectedProduct");

    // Remove the 'active' class from all items
    for (var i = 0; i < productItems.length; i++) {
      productItems[i].classList.remove("active");
    }

    // Add the 'active' class to the clicked item
    element.parentNode.classList.add("active");

    // Update the content of the selectproductContainer
    selectProductContainer.innerText = product;

    if (product === "Popular") {
      selectProductContainer.innerHTML = "<img class='popularImg' src='../img/3736.jpg' alt='Popular Product Image'><br>Popular Product";
    }
  }


  
  // CLICK AND SHOW THE PREVIEW //

 // Get all the product items
const productItems = document.querySelectorAll('.selectproductContainer li');

// Get the previews container
const previewsContainer = document.getElementById('previewsContainer');

// Add a click event listener to each product item
productItems.forEach((item) => {
  item.addEventListener('click', showProductPreview);
});

// Function to show the product preview
function showProductPreview(event) {
  // Get the clicked item
  const clickedItem = event.currentTarget;

  // Get the product information from the clicked item
  let productImg = clickedItem.querySelector('.productImg')?.src;
  if (!productImg) {
    productImg = clickedItem.querySelector('.productImgQualityChange').src;
  }

  const productName = clickedItem.querySelector('h2').textContent;
  const productPrice = clickedItem.querySelector('.productPrice').textContent;

  // Set the product information in the preview container
  const previewsImg = previewsContainer.querySelector('.previewsImg');
  previewsImg.src = productImg;
  previewsImg.alt = productName;

  const previewsDescription = previewsContainer.querySelector('.productDescription');
  previewsDescription.querySelector('h3').textContent = productName;
  previewsDescription.querySelector('.productpreviewPrice').textContent = productPrice;

  // Remove the "active" class from all product items
  productItems.forEach((item) => {
    item.classList.remove('active');
  });

  // Add the "active" class to the clicked item
  clickedItem.classList.add('active');

  // Show/hide the preview container based on whether any item is clicked
  previewsContainer.style.display = 'block';
}

// Hide the preview container initially
previewsContainer.style.display = 'none';


  // SIZE SELECTOR JS //

// Get all the elements with the class name 'selectedsizeContainer'
const sizeContainers = document.querySelectorAll('.selectedsizeContainer');

// Attach a click event listener to each sizeContainer
sizeContainers.forEach(container => {
  container.addEventListener('click', function() {
    // Remove the 'active' class from all sizeContainers
    sizeContainers.forEach(container => {
      container.classList.remove('active');
    });

    // Add the 'active' class to the clicked sizeContainer
    this.classList.add('active');
  });
});

// DESCRIPTION AND REVIEWS //
// JavaScript code
const descriptionTab = document.querySelector('.description');
const reviewsTab = document.querySelector('.reviews');
const descriptionContainer = document.querySelector('.descriptionContainer');
const userReviewsContainer = document.querySelector('.userReviewsContainer');
let selectedProduct = {}; // Variable to store the selected product information

// Function to update the selected product information
function updateSelectedProduct(name, price, size) {
    selectedProduct.name = name;
    selectedProduct.price = price;
    selectedProduct.size = size;
}

descriptionTab.addEventListener('click', () => {
    if (!descriptionContainer.classList.contains('show')) {
        descriptionContainer.classList.add('show');
        userReviewsContainer.classList.remove('show');
    }

    descriptionTab.classList.add('active');
    reviewsTab.classList.remove('active');
});

reviewsTab.addEventListener('click', () => {
    if (!userReviewsContainer.classList.contains('show')) {
        descriptionContainer.classList.remove('show');
        userReviewsContainer.classList.add('show');
    }

    reviewsTab.classList.add('active');
    descriptionTab.classList.remove('active');
});

// Event listener for clicking on a product container
const productContainers = document.querySelectorAll('.selectproductContainer li');
productContainers.forEach((container) => {
    container.addEventListener('click', (event) => {
        event.preventDefault(); // Prevent the default link click behavior

        const productName = container.querySelector('h2').textContent;
        const productPrice = container.querySelector('.productPrice').textContent;
        const productSize = container.querySelector('input[name="size"]').value;

        // Update the selected product information
        updateSelectedProduct(productName, productPrice, productSize);

        // Perform any additional actions based on the selected product
        console.log(selectedProduct); // Example: Output the selected product information

        // Update the input values
        const form = document.querySelector('.cartContainerForm');

        // Remove any previously added hidden inputs
        const existingHiddenInputs = form.querySelectorAll('input[type="hidden"]');
        existingHiddenInputs.forEach((input) => {
            input.remove();
        });

        // Create new hidden inputs with the updated values
        const productNameInput = document.createElement('input');
        productNameInput.type = 'hidden';
        productNameInput.name = 'product_name';
        productNameInput.value = selectedProduct.name;

        const priceInput = document.createElement('input');
        priceInput.type = 'hidden';
        priceInput.name = 'price';
        priceInput.value = selectedProduct.price;

        const sizeInput = document.createElement('input');
        sizeInput.type = 'hidden';
        sizeInput.name = 'size';
        sizeInput.value = selectedProduct.size;

        // Add the new hidden inputs to the form
        form.appendChild(productNameInput);
        form.appendChild(priceInput);
        form.appendChild(sizeInput);

        // Submit the form
        form.submit();
    });
});

JAVASCRIPT WHERE I CAN STILL SEE THE previews

  // JavaScript code
    const descriptionTab = document.querySelector('.description');
    const reviewsTab = document.querySelector('.reviews');
    const descriptionContainer = document.querySelector('.descriptionContainer');
    const userReviewsContainer = document.querySelector('.userReviewsContainer');
    let selectedProduct = {}; // Variable to store the selected product information

    // Function to update the selected product information
    function updateSelectedProduct(name, price, size) {
        selectedProduct.name = name;
        selectedProduct.price = price;
        selectedProduct.size = size;
    }

    descriptionTab.addEventListener('click', () => {
        descriptionContainer.classList.add('show');
        userReviewsContainer.classList.remove('show');

        descriptionTab.classList.add('active');
        reviewsTab.classList.remove('active');
    });

    reviewsTab.addEventListener('click', () => {
        descriptionContainer.classList.remove('show');
        userReviewsContainer.classList.add('show');

        reviewsTab.classList.add('active');
        descriptionTab.classList.remove('active');
    });

    // Event listener for clicking on a product container
    const productContainers = document.querySelectorAll('.selectproductContainer li');
    productContainers.forEach((container) => {
        container.addEventListener('click', () => {
            const productName = container.querySelector('h2').textContent;
            const productPrice = container.querySelector('.productPrice').textContent;
            const productSize = container.querySelector('input[name="size"]').value;

            // Update the selected product information
            updateSelectedProduct(productName, productPrice, productSize);

            // Perform any additional actions based on the selected product
            console.log(selectedProduct); // Example: Output the selected product information

            // Update the input values
            const productNameInput = document.querySelector('input[name="product_name"]');
            const priceInput = document.querySelector('input[name="price"]');
            const sizeInput = document.querySelector('input[name="size"]');

            productNameInput.value = selectedProduct.name;
            priceInput.value = selectedProduct.price;
            sizeInput.value = selectedProduct.size;
        });
    });

FINAL CODE FOR ADD TO CART FINE 

// JavaScript code
        const descriptionTab = document.querySelector('.description');
        const reviewsTab = document.querySelector('.reviews');
        const descriptionContainer = document.querySelector('.descriptionContainer');
        const userReviewsContainer = document.querySelector('.userReviewsContainer');
        let selectedProduct = {}; // Variable to store the selected product information

        // Function to update the selected product information
        function updateSelectedProduct(name, price, size) {
            selectedProduct.name = name;
            selectedProduct.price = price;
            selectedProduct.size = size;
        }

        descriptionTab.addEventListener('click', () => {
            descriptionContainer.classList.add('show');
            userReviewsContainer.classList.remove('show');

            descriptionTab.classList.add('active');
            reviewsTab.classList.remove('active');
        });

        reviewsTab.addEventListener('click', () => {
            descriptionContainer.classList.remove('show');
            userReviewsContainer.classList.add('show');

            reviewsTab.classList.add('active');
            descriptionTab.classList.remove('active');
        });

        // Event listener for clicking on a product container
        const productContainers = document.querySelectorAll('.selectproductContainer li');
        productContainers.forEach((container) => {
            container.addEventListener('click', () => {
                const productName = container.querySelector('h2').textContent;
                const productPrice = container.querySelector('.productPrice').textContent;
                const productSize = container.querySelector('input[name="size"]').value;

                // Update the selected product information
                updateSelectedProduct(productName, productPrice, productSize);

                // Perform any additional actions based on the selected product
                console.log(selectedProduct); // Example: Output the selected product information

                // Update the input values
                const form = document.querySelector('.cartContainerForm');

                // Remove any previously added hidden inputs
                const existingHiddenInputs = form.querySelectorAll('input[type="hidden"]');
                existingHiddenInputs.forEach((input) => {
                    input.remove();
                });

                // Create new hidden inputs with the updated values
                const productNameInput = document.createElement('input');
                productNameInput.type = 'hidden';
                productNameInput.name = 'product_name';
                productNameInput.value = selectedProduct.name;

                const priceInput = document.createElement('input');
                priceInput.type = 'hidden';
                priceInput.name = 'price';
                priceInput.value = selectedProduct.price;

                const sizeInput = document.createElement('input');
                sizeInput.type = 'hidden';
                sizeInput.name = 'size';
                sizeInput.value = selectedProduct.size;

                // Add the new hidden inputs to the form
                form.appendChild(productNameInput);
                form.appendChild(priceInput);
                form.appendChild(sizeInput);

                // Submit the form
                // form.submit();
            });
        });
        

        //  // Get the cart container and the notification span
//  const cartContainer = document.getElementById('cartContainer');
//  const cartNotification = document.getElementById('cartNotification');

//  // Add an event listener to each "Add to Cart" button
//  const addToCartButtons = document.querySelectorAll('.addtoCartContainer');
//  addToCartButtons.forEach((button) => {
//    button.addEventListener('click', () => {
//      // Add the notification effect
//      cartContainer.classList.add('notificationEffect');

//      // Remove the notification effect after a certain time (e.g., 2 seconds)
//      setTimeout(() => {
//        cartContainer.classList.remove('notificationEffect');
//      }, 2000);
//    });
//  });